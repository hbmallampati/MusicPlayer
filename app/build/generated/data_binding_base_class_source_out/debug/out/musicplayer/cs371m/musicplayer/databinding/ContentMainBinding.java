// Generated by view binder compiler. Do not edit!
package musicplayer.cs371m.musicplayer.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.SeekBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import musicplayer.cs371m.musicplayer.R;

public final class ContentMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView currSongNameTv;

  @NonNull
  public final TextView lapsedTimeTv;

  @NonNull
  public final TextView loopTv;

  @NonNull
  public final Button nextBt;

  @NonNull
  public final TextView nextSongNameTv;

  @NonNull
  public final TextView nextSongTv;

  @NonNull
  public final TextView nowPlayingTv;

  @NonNull
  public final Button playPauseBt;

  @NonNull
  public final Button previousBt;

  @NonNull
  public final TextView remTimeTv;

  @NonNull
  public final SeekBar seekBar;

  @NonNull
  public final Button shuffleBt;

  @NonNull
  public final RecyclerView songsRV;

  private ContentMainBinding(@NonNull ConstraintLayout rootView, @NonNull TextView currSongNameTv,
      @NonNull TextView lapsedTimeTv, @NonNull TextView loopTv, @NonNull Button nextBt,
      @NonNull TextView nextSongNameTv, @NonNull TextView nextSongTv,
      @NonNull TextView nowPlayingTv, @NonNull Button playPauseBt, @NonNull Button previousBt,
      @NonNull TextView remTimeTv, @NonNull SeekBar seekBar, @NonNull Button shuffleBt,
      @NonNull RecyclerView songsRV) {
    this.rootView = rootView;
    this.currSongNameTv = currSongNameTv;
    this.lapsedTimeTv = lapsedTimeTv;
    this.loopTv = loopTv;
    this.nextBt = nextBt;
    this.nextSongNameTv = nextSongNameTv;
    this.nextSongTv = nextSongTv;
    this.nowPlayingTv = nowPlayingTv;
    this.playPauseBt = playPauseBt;
    this.previousBt = previousBt;
    this.remTimeTv = remTimeTv;
    this.seekBar = seekBar;
    this.shuffleBt = shuffleBt;
    this.songsRV = songsRV;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ContentMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ContentMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.content_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ContentMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.currSongNameTv;
      TextView currSongNameTv = ViewBindings.findChildViewById(rootView, id);
      if (currSongNameTv == null) {
        break missingId;
      }

      id = R.id.lapsedTimeTv;
      TextView lapsedTimeTv = ViewBindings.findChildViewById(rootView, id);
      if (lapsedTimeTv == null) {
        break missingId;
      }

      id = R.id.loopTv;
      TextView loopTv = ViewBindings.findChildViewById(rootView, id);
      if (loopTv == null) {
        break missingId;
      }

      id = R.id.nextBt;
      Button nextBt = ViewBindings.findChildViewById(rootView, id);
      if (nextBt == null) {
        break missingId;
      }

      id = R.id.nextSongNameTv;
      TextView nextSongNameTv = ViewBindings.findChildViewById(rootView, id);
      if (nextSongNameTv == null) {
        break missingId;
      }

      id = R.id.nextSongTv;
      TextView nextSongTv = ViewBindings.findChildViewById(rootView, id);
      if (nextSongTv == null) {
        break missingId;
      }

      id = R.id.nowPlayingTv;
      TextView nowPlayingTv = ViewBindings.findChildViewById(rootView, id);
      if (nowPlayingTv == null) {
        break missingId;
      }

      id = R.id.playPauseBt;
      Button playPauseBt = ViewBindings.findChildViewById(rootView, id);
      if (playPauseBt == null) {
        break missingId;
      }

      id = R.id.previousBt;
      Button previousBt = ViewBindings.findChildViewById(rootView, id);
      if (previousBt == null) {
        break missingId;
      }

      id = R.id.remTimeTv;
      TextView remTimeTv = ViewBindings.findChildViewById(rootView, id);
      if (remTimeTv == null) {
        break missingId;
      }

      id = R.id.seekBar;
      SeekBar seekBar = ViewBindings.findChildViewById(rootView, id);
      if (seekBar == null) {
        break missingId;
      }

      id = R.id.shuffleBt;
      Button shuffleBt = ViewBindings.findChildViewById(rootView, id);
      if (shuffleBt == null) {
        break missingId;
      }

      id = R.id.songsRV;
      RecyclerView songsRV = ViewBindings.findChildViewById(rootView, id);
      if (songsRV == null) {
        break missingId;
      }

      return new ContentMainBinding((ConstraintLayout) rootView, currSongNameTv, lapsedTimeTv,
          loopTv, nextBt, nextSongNameTv, nextSongTv, nowPlayingTv, playPauseBt, previousBt,
          remTimeTv, seekBar, shuffleBt, songsRV);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
